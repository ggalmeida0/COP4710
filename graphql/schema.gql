input UserInput { 
    username: String 
    name: String
    passwordHash: String
    phone: String
    email: String
    dob: String
}

input PaymentInfoInput {
    owned_by: String
    expiration_date: String
    csv_code: String
    card_number: String
    name_on_card: String
}

input OrderInput {
    ordered_by:String
    total: Float
    games: [String]
    zip: String
    country: String
    state: String
    city: String
    street_address:String
}

type Order {
    ordered_by:String
    total: Float
    games: [String]
    zip: String
    country: String
    state: String
    city: String
    street_address:String
}

type PaymentInfo {
    owned_by: String
    expiration_date: String
    csv_code: String
    card_number: String
    name_on_card: String
}

type Game { 
    title: String
    qty: Int
    genre: String
    description: String
    developer: String
    rating: String
    cost: String
}



type Response {
    success: Boolean!
    message: String
}

type Mutation {
    signUp(user: UserInput!): Response

    addToCart(username: String! gameTitle: String!): Response
    removeFromCart(username: String! gameTitle: String!): Response

    storePaymentInfo(paymentInfo: PaymentInfoInput!): Response

    clearCart(username: String!): Response

    storeOrder(order: OrderInput!): ID
}

type Query {
    login(username:String! passwordHash:String!): Boolean

    getCartContent(username: String!): [Game]

    getAllGames: [Game]

    getPaymentInfo(username: String!): PaymentInfo

    getLatestOrder(username:String!): Order
}

